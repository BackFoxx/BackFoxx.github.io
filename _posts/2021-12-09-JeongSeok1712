---
layout: single
title: 백준 1712번 - 손익분기점

categories:
- Java
---

> 월드전자는 노트북을 제조하고 판매하는 회사이다. 노트북 판매 대수에 상관없이 매년 임대료, 재산세, 보험료, 급여 등 A만원의 고정 비용이 들며, 한 대의 노트북을 생산하는 데에는 재료비와 인건비 등 총 B만원의 가변 비용이 든다고 한다. 예를 들어 A=1,000, B=70이라고 하자. 이 경우 노트북을 한 대 생산하는 데는 총 1,070만원이 들며, 열 대 생산하는 데는 총 1,700만원이 든다. 노트북 가격이 C만원으로 책정되었다고 한다. 일반적으로 생산 대수를 늘려 가다 보면 어느 순간 총 수입(판매비용)이 총 비용(=고정비용+가변비용)보다 많아지게 된다. 최초로 총 수입이 총 비용보다 많아져 이익이 발생하는 지점을 손익분기점(BREAK-EVEN POINT)이라고 한다. A, B, C가 주어졌을 때, 손익분기점을 구하는 프로그램을 작성하시오.
> 첫째 줄에 A, B, C가 빈 칸을 사이에 두고 순서대로 주어진다. A, B, C는 21억 이하의 자연수이다. 첫 번째 줄에 손익분기점 즉 최초로 이익이 발생하는 판매량을 출력한다. 손익분기점이 존재하지 않으면 -1을 출력한다.

```java
import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.io.IOException;
import java.util.StringTokenizer;

class B_1712 {

	public static int Result(int A, int B, int C) {
		int Pay = A; // 총 지출
		int Sell = 0; 
//		if(A+B < C) { return 1; } //한 대만 팔아도 이익이 나는 경우

		int profit = C - B; // 1대 판매당 순이익
		if(profit <= 0) { return -1; } // 순이익이 없거나 마이너스인 경우
		
		while(true) {
			Pay = A - (profit*Sell); // 고정 지출에서 순이익을 판매량만큼 곱한 값을 뺐을 때
			if(Pay < 0) {
				break; // 고정 지출보다 순이익이 커지면 반복문 탈출
			}
			++Sell; // 아니면 판매량 +1
		}
		return Sell;
	}
	
	public static void main(String[] args) throws IOException {
		BufferedReader i = new BufferedReader(new InputStreamReader(System.in));
		StringTokenizer st;
		st = new StringTokenizer(i.readLine());
		
        int A = Integer.parseInt(st.nextToken()); // 고정 지출
        int B = Integer.parseInt(st.nextToken()); // 1대 생산당 가변 비용
        int C = Integer.parseInt(st.nextToken()); // 노트북 가격
        
        System.out.println(Result(A, B, C));
	}

}

```
